{"version":3,"file":"static/js/255.89cd794f.chunk.js","mappings":"sMAqEA,EAlEkB,WACd,OAA4BA,EAAAA,EAAAA,UAAS,CAAC,EAAG,EAAG,EAAG,EAAG,IAAlD,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAUC,EAAAA,EAAAA,QAAuB,MACvC,OACI,gBAAKC,GAAG,OAAR,SAEQJ,GAAUA,EAAOK,KAAI,SAACC,EAAMC,GAAP,OACjB,gBAAKC,UAAU,QAAQC,WAAY,SAAAC,GAAC,OAkBpD,SAAkBA,GACdA,EAAEC,gBACL,CApBuDC,CAASF,EAAb,EAAiBG,YAAa,SAAAH,GAAC,OAsBnF,SAAmBA,GACfA,EAAEC,iBACFD,EAAEI,cAAcC,UAAUC,IAAI,UACjC,CAzBsFC,CAAUP,EAAd,EAAkBQ,YAAa,SAACR,GAAD,OA4BlH,SAAmBA,GACfA,EAAEI,cAAcN,UAAY,OAC/B,CA9BwHW,CAAUT,EAAjB,EAAqBU,OAAQ,SAACV,GAAD,OAgC/I,SAAkBA,EAAoCH,GAClDG,EAAEI,cAAcN,UAAY,QAE5B,IAAMa,EAAUrB,EAAOK,KAAI,SAAAC,GAAI,OAAI,CAAJ,IAC/Be,EAAQd,GAAO,EACfN,EAAUoB,EACb,CAtCqJC,CAASZ,EAAGH,EAAnB,EAA/H,SAEiB,IAATD,GACI,gBACIiB,IAAKrB,EACLM,UAAU,OACVgB,WAAW,EACXC,YAAa,WAkCrCvB,EAAQwB,UACRxB,EAAQwB,QAAQX,UAAUC,IAAI,QAC9BW,YAAW,WACHzB,EAAQwB,UACRxB,EAAQwB,QAAQlB,UAAY,YAEnC,GAAE,GAxCkC,EACboB,UAAW,WA4CnC1B,EAAQwB,UACRxB,EAAQwB,QAAQlB,UAAY,OA7CO,KAEf,yBAViJD,EAD5I,KA0DpC,C","sources":["pages/DragNDrop/index.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './index.custom.scss';\r\n\r\nconst DragNDrop = () => {\r\n    const [select, setSelect] = useState([1, 0, 0, 0, 0]);\r\n    const fillref = useRef<HTMLDivElement>(null);\r\n    return (\r\n        <div id=\"body\">\r\n            {\r\n                select && select.map((item, idx) => (\r\n                    <div className='empty' onDragOver={e => dragOver(e)} onDragEnter={e => dragEnter(e)} onDragLeave={(e) => dragLeave(e)} onDrop={(e) => dragDrop(e, idx)} key={idx}>\r\n                        {\r\n                            item === 1 ?\r\n                                <div\r\n                                    ref={fillref}\r\n                                    className='fill'\r\n                                    draggable={true}\r\n                                    onDragStart={() => dragStart()}\r\n                                    onDragEnd={() => dragEnd()}\r\n                                ></div> :\r\n                                <></>\r\n                        }\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n\r\n    function dragOver(e: React.DragEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function dragEnter(e: React.DragEvent<HTMLDivElement>) {\r\n        e.preventDefault();\r\n        e.currentTarget.classList.add('hovered');\r\n    }\r\n\r\n\r\n    function dragLeave(e: React.DragEvent<HTMLDivElement>) {\r\n        e.currentTarget.className = 'empty';\r\n    }\r\n\r\n    function dragDrop(e: React.DragEvent<HTMLDivElement>, idx: number) {\r\n        e.currentTarget.className = 'empty';\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const nselect = select.map(item => 0);\r\n        nselect[idx] = 1;\r\n        setSelect(nselect);\r\n    }\r\n\r\n    function dragStart() {\r\n        if (fillref.current) {\r\n            fillref.current.classList.add('hold');\r\n            setTimeout(() => {\r\n                if (fillref.current) {\r\n                    fillref.current.className = 'invisible';\r\n                }\r\n            }, 0)\r\n        }\r\n    }\r\n\r\n    function dragEnd() {\r\n        if (fillref.current) {\r\n            fillref.current.className = 'fill';\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default DragNDrop;"],"names":["useState","select","setSelect","fillref","useRef","id","map","item","idx","className","onDragOver","e","preventDefault","dragOver","onDragEnter","currentTarget","classList","add","dragEnter","onDragLeave","dragLeave","onDrop","nselect","dragDrop","ref","draggable","onDragStart","current","setTimeout","onDragEnd"],"sourceRoot":""}