{"version":3,"file":"static/js/11.93dc5335.chunk.js","mappings":"4LACA,EAAuB,yBAAvB,EAA0D,4B,SCoG1D,EA7FmB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,SAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAgCN,EAAAA,EAAAA,UAAmB,CAAEO,OAAGC,EAAWC,OAAGD,IAAtE,eAAOE,EAAP,KAAiBC,EAAjB,KACMC,GAAYC,EAAAA,EAAAA,QAA0B,MAC5C,OACI,iBAAKC,UAAWC,EAAaC,UAAW,kBAaxCZ,GAAW,QACXO,EAAY,CAAEJ,OAAGC,EAAWC,OAAGD,GAdS,EAAxC,WACI,mBAAQS,IAAKL,EAAWM,MAAM,MAAMC,OAAO,MAAMC,YAAa,SAACC,GAAD,OAgBtE,SAAmBA,GACfjB,GAAW,GACX,IAAMkB,EAAYD,EAAEE,YAAYC,QAC1BC,EAAYJ,EAAEE,YAAYG,QAChCf,EAAY,CAAEJ,EAAGe,EAAWb,EAAGgB,GAElC,CAtB4EE,CAAUN,EAAjB,EAAqBO,YAAa,SAACP,GAAD,OAwBxG,SAAmBA,GACf,GAAIlB,EAAS,CACT,IAAM0B,EAAYR,EAAEE,YAAYC,QAC1BM,EAAaT,EAAEE,YAAYG,QAC7BhB,EAASH,GAAKG,EAASD,IAQnC,SAAoBF,EAAWE,GAAY,IAAD,EAChCsB,EAAG,UAAGnB,EAAUoB,eAAb,aAAG,EAAmBC,WAAW,MACtCF,IACAA,EAAIG,YACJH,EAAII,IAAI5B,EAAGE,EAAGR,EAAM,EAAa,EAAVmC,KAAKC,IAC5BN,EAAIO,UAAYjC,EAChB0B,EAAIQ,OAEX,CAfWC,CAAWX,EAAWC,GAiBlC,SAAkBW,EAAYC,EAAYC,EAAYC,GAAa,IAAD,EACxDb,EAAG,UAAGnB,EAAUoB,eAAb,aAAG,EAAmBC,WAAW,MACtCF,IACAA,EAAIG,YACJH,EAAIc,OAAOJ,EAAIC,GACfX,EAAIe,OAAOH,EAAIC,GACfb,EAAIgB,YAAc1C,EAClB0B,EAAIiB,UAAmB,EAAP/C,EAChB8B,EAAIkB,SAEX,CA1BWC,CAASxC,EAASH,EAAGG,EAASD,EAAGoB,EAAWC,IAEhDnB,EAAY,CAAEJ,EAAGsB,EAAWpB,EAAGqB,GAClC,CACJ,CAlC8GqB,CAAU9B,EAAjB,KAChG,iBAAKP,UAAWC,EAAhB,WACI,mBAAQqC,QAgEpB,WACI,IAAIC,EAAQpD,EAAO,EACfoD,EAAQ,IACRA,EAAQ,GAEZnD,EAAQmD,EACX,EAtEW,gBACA,0BAAOpD,KACP,mBAAQmD,QAsDpB,WACI,IAAIC,EAAQpD,EAAO,EACfoD,EAAQ,KACRA,EAAQ,IAEZnD,EAAQmD,EACX,EA5DW,gBACA,kBAAOC,KAAM,QAASC,SAAU,SAAClC,GAAD,OAAOf,EAASe,EAAEmC,OAAOC,MAAzB,KAChC,mBAAQL,QAoEpB,WACI,GAAIxC,EAAUoB,QAAS,CACnB,IAAMD,EAAMnB,EAAUoB,QAAQC,WAAW,MACtC,OAAHF,QAAG,IAAHA,GAAAA,EAAK2B,UAAU,EAAG,EAAG9C,EAAUoB,QAAQd,MAAON,EAAUoB,QAAQb,OACnE,CACJ,EAzEW,oBA6Ef,C","sources":["webpack://frontendpractice/./src/pages/DrawingApp/index.module.scss?3edc","pages/DrawingApp/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"DrawingApp_body__uEDrO\",\"toolbox\":\"DrawingApp_toolbox__zRT+8\"};","import React, { useRef, useState } from 'react';\r\nimport styles from './index.module.scss';\r\n\r\ninterface Position {\r\n    x: number | undefined,\r\n    y: number | undefined,\r\n}\r\n\r\nconst DrawingApp = () => {\r\n    const [size, setSize] = useState(10);\r\n    const [Pressed, setPressed] = useState(false);\r\n    const [color, setColor] = useState('black');\r\n    const [position, setPosition] = useState<Position>({ x: undefined, y: undefined });\r\n    const CanvesRef = useRef<HTMLCanvasElement>(null);\r\n    return (\r\n        <div className={styles.body} onMouseUp={() => mouseUp()}>\r\n            <canvas ref={CanvesRef} width='800' height='700' onMouseDown={(e) => mouseDown(e)} onMouseMove={(e) => mouseMove(e)}></canvas>\r\n            <div className={styles.toolbox}>\r\n                <button onClick={deCreaseBtn}>-</button>\r\n                <span>{size}</span>\r\n                <button onClick={inCreasebtn}>+</button>\r\n                <input type={'color'} onChange={(e) => setColor(e.target.value)} ></input>\r\n                <button onClick={clearCanves}>X</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    function mouseUp() {\r\n        setPressed(false);\r\n        setPosition({ x: undefined, y: undefined });\r\n    }\r\n\r\n    function mouseDown(e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) {\r\n        setPressed(true);\r\n        const positionX = e.nativeEvent.offsetX;\r\n        const positionY = e.nativeEvent.offsetY;\r\n        setPosition({ x: positionX, y: positionY });\r\n        // console.log(e.nativeEvent.offsetX, e.nativeEvent.offsetY)\r\n    }\r\n\r\n    function mouseMove(e: React.MouseEvent<HTMLCanvasElement, MouseEvent>) {\r\n        if (Pressed) {\r\n            const nPositonX = e.nativeEvent.offsetX;\r\n            const nPositionY = e.nativeEvent.offsetY;\r\n            if (position.x && position.y) {\r\n                drawCircle(nPositonX, nPositionY);\r\n                drawLine(position.x, position.y, nPositonX, nPositionY);\r\n            }\r\n            setPosition({ x: nPositonX, y: nPositionY });\r\n        }\r\n    }\r\n\r\n    function drawCircle(x: number, y: number) {\r\n        const ctx = CanvesRef.current?.getContext('2d');\r\n        if (ctx) {\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, size, 0, Math.PI * 2);\r\n            ctx.fillStyle = color;\r\n            ctx.fill();\r\n        }\r\n    }\r\n\r\n    function drawLine(x1: number, y1: number, x2: number, y2: number) {\r\n        const ctx = CanvesRef.current?.getContext('2d');\r\n        if (ctx) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(x1, y1);\r\n            ctx.lineTo(x2, y2);\r\n            ctx.strokeStyle = color;\r\n            ctx.lineWidth = size * 2;\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    function inCreasebtn() {\r\n        let nSize = size + 5;\r\n        if (nSize > 50) {\r\n            nSize = 50;\r\n        }\r\n        setSize(nSize);\r\n    }\r\n\r\n    function deCreaseBtn() {\r\n        let nSize = size - 5;\r\n        if (nSize < 5) {\r\n            nSize = 5;\r\n        }\r\n        setSize(nSize);\r\n    }\r\n\r\n    function clearCanves() {\r\n        if (CanvesRef.current) {\r\n            const ctx = CanvesRef.current.getContext('2d');\r\n            ctx?.clearRect(0, 0, CanvesRef.current.width, CanvesRef.current.height);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default DrawingApp;"],"names":["useState","size","setSize","Pressed","setPressed","color","setColor","x","undefined","y","position","setPosition","CanvesRef","useRef","className","styles","onMouseUp","ref","width","height","onMouseDown","e","positionX","nativeEvent","offsetX","positionY","offsetY","mouseDown","onMouseMove","nPositonX","nPositionY","ctx","current","getContext","beginPath","arc","Math","PI","fillStyle","fill","drawCircle","x1","y1","x2","y2","moveTo","lineTo","strokeStyle","lineWidth","stroke","drawLine","mouseMove","onClick","nSize","type","onChange","target","value","clearRect"],"sourceRoot":""}