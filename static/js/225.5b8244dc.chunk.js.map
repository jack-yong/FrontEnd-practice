{"version":3,"file":"static/js/225.5b8244dc.chunk.js","mappings":"2NACA,EAAuB,6BAAvB,EAA+D,iCAA/D,EAAuG,6BAAvG,EAA6I,+BAA7I,EAAuL,iCAAvL,EAA+N,6B,4BCoG/N,EA/Ec,WACV,IAAMA,EAAS,gCACf,GAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAoCF,EAAAA,EAAAA,YAApC,eAAOG,EAAP,KAAmBC,EAAnB,KAHgB,8CAKhB,WAA0BC,GAA1B,+FACIC,IAAM,CAAEC,OAAQ,QADpB,kBAGyCD,IAAMP,EAASM,GAHxD,uBAGsBG,EAHtB,EAGgBC,KAHhB,SAIyCH,IAAMP,EAASM,EAAW,uBAJnE,gBAIsBK,EAJtB,EAIgBD,KACFE,EAASH,EAASI,MAAQJ,EAASK,MACnCC,EAAQJ,EAASK,MAAM,EAAG,GAC1BC,GAPd,kBAOwCR,GAPxC,IAOkDG,OAAAA,EAAQG,MAAAA,IAClDZ,EAAWc,GARnB,kDAWqC,KAAzB,KAAMC,SAASC,OACfhB,EAAW,iCAGXA,EAAW,0BAfvB,2DALgB,sBAyBhB,SAASiB,EAAWC,GAChBA,EAAEC,iBACElB,KA3BQ,oCA4BRmB,CAAWnB,GACXC,EAAc,IAGrB,CAED,OACI,iBAAKmB,UAAWC,EAAhB,WACI,iBAAMD,UAAWC,EAAiBC,SAAU,SAAAL,GAAC,OAAID,EAAWC,EAAf,EAA7C,UACI,kBAAOM,KAAM,OAAQC,YAAa,uBAAwBC,MAAOzB,EAAY0B,SAAU,SAAAT,GAAC,OAAIhB,EAAcgB,EAAEU,OAAOF,MAA3B,OAE5F,0BAEQ3B,IAEA,gBAAKsB,UAAWC,EAAhB,SACwB,kBAAZvB,GACJ,wBAAKA,KAEL,iCACI,0BACI,gBAAK8B,IAAK9B,EAAQ+B,WAAYC,IAAKhC,EAAQW,KAAMW,UAAWC,OAEhE,iBAAKD,UAAWC,EAAhB,WACI,wBAAKvB,EAAQU,SAETV,EAAQiC,MAAO,uBAAIjC,EAAQiC,OAG/B,2BACI,0BAAKjC,EAAQkC,WAAU,8CACvB,0BAAKlC,EAAQmC,WAAU,8CACvB,0BAAKnC,EAAQoC,cAAa,6CAE9B,yBAEQpC,EAAQa,MAAMwB,KAAI,SAACC,EAAMC,GAAP,OACd,cAAajB,UAAWC,EAAaM,OAAO,SAASW,KAAMF,EAAKG,SAAUC,IAAI,aAA9E,SAA6FJ,EAAK3B,MAA1F4B,EADM,kBAa7D,C","sources":["webpack://frontendpractice/./src/pages/GithubProfiles/index.module.scss?3a18","pages/GithubProfiles/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"GithubProfiles_body__BZLAR\",\"userForm\":\"GithubProfiles_userForm__n-ZEX\",\"card\":\"GithubProfiles_card__aLSES\",\"avatar\":\"GithubProfiles_avatar__PFinZ\",\"userInfo\":\"GithubProfiles_userInfo__5mMQK\",\"repo\":\"GithubProfiles_repo__-k8M4\"};","import React, { useState } from 'react';\r\nimport styles from './index.module.scss';\r\nimport axios from 'axios';\r\n\r\ninterface userinfo {\r\n    userID: string,\r\n    bio: string,\r\n    avatar_url: string,\r\n    name: string,\r\n    followers: number,\r\n    following: number,\r\n    public_repos: string,\r\n    repos: Array<repo>,\r\n}\r\n\r\ninterface repo {\r\n    html_url: string,\r\n    name: string,\r\n}\r\n\r\ntype cardMsg = undefined | userinfo | string;\r\n\r\nconst index = () => {\r\n    const APIURL = 'https://api.github.com/users/';\r\n    const [cardMsg, setCardMsg] = useState<cardMsg>();\r\n    const [inputValue, setInputValue] = useState<string>();\r\n\r\n    async function getCardMsg(username: string) {\r\n        axios({ method: 'get' })\r\n        try {\r\n            const { data: userData } = await axios(APIURL + username);\r\n            const { data: repoData } = await axios(APIURL + username + '/repos?sort=created');\r\n            const userID = userData.name || userData.login;\r\n            const repos = repoData.slice(0, 5);\r\n            const nCardMsg: userinfo = { ...userData, userID, repos }\r\n            setCardMsg(nCardMsg);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        } catch (error: any) {\r\n            if (error.response.status == 404) {\r\n                setCardMsg('No profile with this username');\r\n            }\r\n            else {\r\n                setCardMsg('Problem fetching repos');\r\n            }\r\n        }\r\n    }\r\n\r\n    function formSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (inputValue) {\r\n            getCardMsg(inputValue);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={styles.body}>\r\n            <form className={styles.userForm} onSubmit={e => formSubmit(e)}>\r\n                <input type={'text'} placeholder={'Search a Github User'} value={inputValue} onChange={e => setInputValue(e.target.value)}></input>\r\n            </form>\r\n            <main>\r\n                {\r\n                    cardMsg\r\n                    &&\r\n                    <div className={styles.card}>\r\n                        {typeof cardMsg === 'string' ?\r\n                            <h1>{cardMsg}</h1>\r\n                            :\r\n                            <>\r\n                                <div >\r\n                                    <img src={cardMsg.avatar_url} alt={cardMsg.name} className={styles.avatar}></img>\r\n                                </div>\r\n                                <div className={styles.userInfo}>\r\n                                    <h2>{cardMsg.userID}</h2>\r\n                                    {\r\n                                        cardMsg.bio && <p>{cardMsg.bio}</p>\r\n                                    }\r\n\r\n                                    <ul>\r\n                                        <li>{cardMsg.followers}<strong>Followers</strong></li>\r\n                                        <li>{cardMsg.following}<strong>Following</strong></li>\r\n                                        <li>{cardMsg.public_repos}<strong>Repos</strong></li>\r\n                                    </ul>\r\n                                    <div>\r\n                                        {\r\n                                            cardMsg.repos.map((item, idx) => (\r\n                                                <a key={idx} className={styles.repo} target='_blank' href={item.html_url} rel=\"noreferrer\" >{item.name}</a>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </div >\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default index;"],"names":["APIURL","useState","cardMsg","setCardMsg","inputValue","setInputValue","username","axios","method","userData","data","repoData","userID","name","login","repos","slice","nCardMsg","response","status","formSubmit","e","preventDefault","getCardMsg","className","styles","onSubmit","type","placeholder","value","onChange","target","src","avatar_url","alt","bio","followers","following","public_repos","map","item","idx","href","html_url","rel"],"sourceRoot":""}