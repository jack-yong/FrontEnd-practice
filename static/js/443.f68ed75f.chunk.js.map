{"version":3,"file":"static/js/443.f68ed75f.chunk.js","mappings":"uMACA,EAAuB,kCAAvB,EAA4E,8CAA5E,EAAoI,qC,SCwEpI,EAhEc,WAEV,IAAMA,EAAc,CAChB,CACIC,KAAM,aACNC,IAAK,KACLC,KAAM,qBAGV,CACIF,KAAM,aACNC,IAAK,IACLC,KAAM,uBAER,CACEF,KAAM,cACNC,IAAK,KACLC,KAAM,kBAId,GAAgCC,EAAAA,EAAAA,UAAS,IAAIC,MAAM,GAAGC,KAAK,IAA3D,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAUC,EAAAA,EAAAA,SAAO,GAEjBC,EAAgB,SAAhBA,EAAiBC,EAAiBC,GACpC,IAAMC,EAAYF,EAAKV,IAAM,IACzBK,EAASM,GAAOD,EAAKV,KACrBK,EAASM,GAAOE,KAAKC,KAAKT,EAASM,GAAOC,GAC1CN,GAAY,OAAID,IAChBU,YAAW,WACPN,EAAcC,EAAMC,EACvB,GAAE,KAGHN,EAASM,GAAOD,EAAKV,IACrBM,GAAY,OAAID,IAEvB,EAYD,OAVAW,EAAAA,EAAAA,YAAU,WACFT,EAAQU,UACRnB,EAAYoB,KAAI,SAACR,EAAMC,GACnBF,EAAcC,EAAMC,EACvB,IACDJ,EAAQU,SAAU,EAEzB,GAAE,KAIC,gBAAKE,UAAWC,EAAhB,SAEQtB,EAAYoB,KAAI,SAACR,EAAMC,GAAP,OACZ,iBAAqBQ,UAAWC,EAAhC,WACI,cAAGD,UAAS,eAAUT,EAAKX,KAAf,cACZ,gBAAKoB,UAAWC,EAAhB,SAAiCf,EAASM,MAC1C,0BAAOD,EAAKT,SAHNS,EAAKX,KADH,KAU/B,C,iFCnEc,SAASsB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAInB,MAAMoB,QAAQD,GAAM,OAAO,EAAAE,EAAA,GAAiBF,EAClD,CDES,CAAkBA,IELZ,SAA0BG,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOtB,MAAMyB,KAAKH,EACtH,CFGmC,CAAgBH,KAAQ,EAAAO,EAAA,GAA2BP,IGLvE,WACb,MAAM,IAAIQ,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["webpack://frontendpractice/./src/pages/IncrementingCounter/index.module.scss?0db1","pages/IncrementingCounter/index.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"IncrementingCounter_body__U7Hqw\",\"counterContainer\":\"IncrementingCounter_counterContainer__E9k2+\",\"counter\":\"IncrementingCounter_counter__aUool\"};","import React, { useEffect, useRef, useState } from 'react';\r\nimport styles from './index.module.scss';\r\n\r\ntype countData = {\r\n    icon: string;\r\n    num: number;\r\n    desc: string;\r\n}\r\n\r\nconst index = () => {\r\n\r\n    const counterData = [\r\n        {\r\n            icon: 'fa-twitter',\r\n            num: 12000,\r\n            desc: 'Twitter Followers',\r\n        }\r\n        ,\r\n        {\r\n            icon: 'fa-youtube',\r\n            num: 5000,\r\n            desc: 'YouTube Subscribers',\r\n        }\r\n        , {\r\n            icon: 'fa-facebook',\r\n            num: 7500,\r\n            desc: 'Facebook Fans',\r\n        }\r\n    ];\r\n\r\n    const [numValue, setNumValue] = useState(new Array(3).fill(0));\r\n    const loading = useRef(true);\r\n\r\n    const updateCounter = (item: countData, idx: number) => {\r\n        const increment = item.num / 200;\r\n        if (numValue[idx] < item.num) {\r\n            numValue[idx] = Math.ceil(numValue[idx] + increment);\r\n            setNumValue([...numValue]);\r\n            setTimeout(() => {\r\n                updateCounter(item, idx);\r\n            }, 1);\r\n        }\r\n        else {\r\n            numValue[idx] = item.num;\r\n            setNumValue([...numValue]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loading.current) {\r\n            counterData.map((item, idx) => {\r\n                updateCounter(item, idx);\r\n            });\r\n            loading.current = false;\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={styles.body}>\r\n            {\r\n                counterData.map((item, idx) => (\r\n                    <div key={item.icon} className={styles.counterContainer}>\r\n                        <i className={`fab  ${item.icon}  fa-3x`}></i>\r\n                        <div className={styles.counter}>{numValue[idx]}</div>\r\n                        <span>{item.desc}</span>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default index","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["counterData","icon","num","desc","useState","Array","fill","numValue","setNumValue","loading","useRef","updateCounter","item","idx","increment","Math","ceil","setTimeout","useEffect","current","map","className","styles","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}